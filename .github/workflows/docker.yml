name: Docker image

on:
  push:
    branches:
      - main
      - master
      - feat-*
    tags:
      - v*
jobs:
  build-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - name: "JVM"
            dockerfile: src/main/docker/Dockerfile.jvm
            image: ghcr.io/${{ github.repository_owner }}/pdfesign
          # - name: "Native"
          #   dockerfile: src/main/docker/Dockerfile.multistage
          #   image: ghcr.io/${{ github.repository_owner }}/pdfesign-native
    concurrency:
      group: "${{ github.workflow }}-${{ github.ref }}-${{ matrix.name }}"
      cancel-in-progress: false
    name: Docker image ${{ matrix.name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - shell: sh
        run: mvn -B package -DskipTests -ntp
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{matrix.image}}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha,format=long
            type=raw,latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{matrix.image}}:latest
          cache-to: type=inline

